# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Fabian Kastner
# 2020.12.05
# inspired by - https://www.datacamp.com/community/tutorials/lstm-python-stock-market
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import numpy as np
import pandas as pd
from sklearn.preprocessing import MinMaxScaler

from modules.retrieve_data import get_df_from_symbol
from modules.visualize_data import plot_data

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

def test_1():
    symbol = "PLTR"
    data = get_df_from_symbol(symbol)
    
    # plot_data(data)
    
    high_prices = data.loc[:,'high'].to_numpy()
    low_prices = data.loc[:,'low'].to_numpy()
    mid_prices = (high_prices+low_prices)/2.0

    print(mid_prices.shape)

    train_data = mid_prices[:(mid_prices.shape[0]//2)]
    test_data = mid_prices[(mid_prices.shape[0]//2):]

    scaler = MinMaxScaler()
    train_data = train_data.reshape(-1,1)
    test_data = test_data.reshape(-1,1)

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
